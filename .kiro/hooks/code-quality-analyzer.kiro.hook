{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.py",
      "**/*.cpp",
      "**/*.h",
      "**/*.cs",
      "**/*.js",
      "**/*.ts",
      "**/*.java",
      "**/*.c",
      "**/*.hpp"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the recently modified source code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for adherence to language-specific best practices and coding standards\n4. **Readability**: Suggest improvements for variable naming, code organization, and documentation\n5. **Performance**: Identify potential performance bottlenecks and optimization opportunities\n6. **Maintainability**: Recommend changes that would make the code easier to maintain and extend\n\nFor each suggestion, provide:\n- Clear explanation of the issue or improvement opportunity\n- Specific code examples showing the current state and proposed improvement\n- Rationale for why the change would be beneficial\n- Priority level (High/Medium/Low) based on impact\n\nMaintain the existing functionality while focusing on code quality improvements. Be constructive and specific in your recommendations."
  }
}